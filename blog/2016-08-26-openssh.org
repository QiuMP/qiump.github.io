#+TITLE: OpenSSH
#+DATE: 2016-06-29
#+SETUPFILE: ~/myblog/setupfile.org
#+JEKYLL_LAYOUT: post
#+JEKYLL_CATEGORIES: Bash
#+JEKYLL_TAGS: Linux ssh
#+JEKYLL_PUBLISHED: true

* ssh和telnet
- =ssh=: secure shell，是一种协议(22/tcp)，用于安全的远程登录
  - =ssh v1=: 基于CRC-32做MAC，不安全，会被man-in-middle攻击
  - =ssh v2=: 双方主机协商选择安全的MAC方式，基于DH算法做密钥交换，基于RSA或DSA算法实现身份认证
  - ssh用于用户登录认证的方式: 基于password、基于key
- =telnet= 是另一种协议(23/tcp)，简单但不安全；文本格式传输的连接都可以使用telnet进行连接，例如80端口
  #+BEGIN_SRC bash
  telnet HOST PORT
  #+END_SRC

* OpenSSH
 =OpenSSH= 是ssh协议的开源实现， =dropbear= 则是另一个开源实现
** 客户端
*** ssh
- 配置文件 :: 
  =/etc/ssh/ssh_config=: 配置文件可以为不同客户端设定不同配置
  #+BEGIN_SRC bash
  Host NAME  # 指定名称
      HostName 主机名
      User 登录用户名
      port 22  # 指定ssh端口号
  #+END_SRC
- ssh命令 :: 
  #+BEGIN_SRC yaml
  ssh [user@]host [COMMAND]  # user默认是当前系统上登录的用户名
    -p port: 设置远程服务器监听的端口
    COMMAND: 不登录远程主机仅执行COMMAND命令
    -X: 支持x11转发，即远程运行图形界面程序
    -Y: 支持安全的x11转发
  #+END_SRC
- 配置密钥认证 ::
  #+BEGIN_SRC bash
  ssh-keygen -t rsa [-P ''] [-f "~/.ssh/id_rsa"]  # 在客户端生成密钥对
  ssh-copy-id [-i "~/.ssh/id_rsa.pub"] [user@]host  # 将公钥传输至服务器的.ssh/authorized_keys中
  #+END_SRC
  - 服务器的 =.ssh/authorized_keys= 权限必须是600
*** scp
 =scp= 可用于发送文件到服务器或获取服务器的文件
#+BEGIN_SRC yaml
scp [options] SRC...  DEST
  -P port: 指定端口
  [user@]host:/PATH/FILE: 指定服务器端的文件或目录

  -r: 递归复制
  -p: 保持原文件的属性信息

  -q: quiet
#+END_SRC
*** sftp
类似于ftp客户端，但基于ssh
** 服务器端
*** sshd
- 配置文件: =/etc/ssh/sshd_config=
  #+BEGIN_SRC bash
  Port 22
  ListenAddress ip  # 一般只允许使用内网登录
  PermitRootLogin no
  PasswordAuthentication no  # 只允许使用密钥认证
  UseDNS no  # 关闭DNS反向解析

  AllowUsers user1 user2  # 用户白名单
  AllowGroups user1 user2  # 组白名单
  #+END_SRC
- =Kerberos= 可以使用其他服务器进行统一认证
- ssh登录的请求日志存放在 =/var/log/secure= 中
* ssh服务的注意事项
1. 不要使用默认端口
2. 禁止使用protocol 1
3. 限制可登录用户
4. 设定空闲会话超时时长
5. 利用防火墙设置ssh访问策略
6. 仅监听特定的IP地址
7. 基于口令认证时，使用强密码策略
8. 使用基于密钥的认证
9. 禁止使用空密码
10. 禁止root用户直接登录
11. 限制ssh的访问频度和并发在线数
12. 做好日志，经常分析
