#+TITLE: Linux文本处理工具
#+DATE: 2016-06-04
#+SETUPFILE: ~/myblog/setupfile.org
#+JEKYLL_LAYOUT: post
#+JEKYLL_CATEGORIES: 文本处理
#+JEKYLL_TAGS: Linux Bash
#+JEKYLL_PUBLISHED: true

* cat, tac
#+BEGIN_SRC yaml
cat [OPTION]... [FILE]...  # 连接文件，然后显示到屏幕上
  -A: 显示所有特殊字符
  -n: 对显示的每一行进行编号
#+END_SRC
#+BEGIN_SRC bash
tac [OPTION]... [FILE]...  # 连接文件，然后倒过来显示到屏幕上
#+END_SRC

* more, less
more和less可以对长文章进行翻页，less更常用

* head, tail
#+BEGIN_SRC yaml
head [OPTION]... [FILE]...  # 读取文件头
  -c num: 指定获取前num字节
  -n num/-num: 指定获取前num行
  -n -num: 排除后num行
#+END_SRC
#+BEGIN_SRC yaml
tail [OPTION]... [FILE]...  # 读取文件尾
  -c num: 指定获取后num字节
  -n num/-num: 指定获取后num行
  -n +num: 排除第num行之前的行数
  -f: 跟踪显示文件新追加的内容；
#+END_SRC

* tr
转换或删除字符
#+BEGIN_SRC yaml
tr [OPTION]... SET1 [SET2]
  -d: 删除SET1中的字符(默认为转换为SET2对应的字符)
#+END_SRC

* wc
行数 单词 字节
#+BEGIN_SRC yaml
wc [OPTION]... [FILE]...
  -l: lines
  -w: words
  -c: characters
#+END_SRC
#+BEGIN_SRC bash
wc -l FILE | cut -d' ' -f1  # 统计文件的行数
#+END_SRC

* cut(df)
通过分隔符切割后显示指定字段
#+BEGIN_SRC yaml
cut [OPTION]... [FILE]...
  -d DELIMITER: 指定分隔符(默认为制表符)
  -f FILEDS: 指定字段，如 1-3,7
  --output-delimiter=STRING: 指定输出分隔符
#+END_SRC

* sort(tk)
排序
#+BEGIN_SRC yaml
sort [OPTION]... [FILE]...
  -f: 忽略字符大小写
  -r: 逆序
  -t DELIMITER: 字段分隔符
  -k num: 以指定字段为标准排序
  -n: 以数值大小进行排序
  -u: uniq，排序后去重
#+END_SRC

* uniq
去除连续且完全相同的行
#+BEGIN_SRC yaml
uniq [OPTION]... [FILE]...
  -c: 显示每行重复出现的次数；
  -d: 仅显示重复过的行；
  -u: 仅显示不曾重复的行；
#+END_SRC

* diff/patch
** diff
diff用于比较两个文本文件的差异
*** 正常格式的diff
#+BEGIN_SRC bash
diff file1 file2
#+END_SRC
显示结果中，第一行是一个提示，用来说明变动位置。它分成三个部分：前面的数字，表示file1的第n行有变化；中间的"c"表示change、"a"表示add、"d"表示delete
*** 上下文格式的diff
#+BEGIN_SRC bash
diff -c f1 f2
#+END_SRC
结果分成四个部分。第一部分的两行，显示两个文件的基本情况：文件名和时间信息，"***"表示变动前的文件，"---"表示变动后的文件。第二部分是15个星号，将文件的基本情况与变动内容分割开。第三部分显示变动前的文件，即file1
*** 合并格式的diff
#+BEGIN_SRC bash
diff -u f1 f2
#+END_SRC
上下文格式的合并版
** patch
patch用于根据diff产生的差异来对源文件进行打补丁，可对目录进行打补丁
#+BEGIN_SRC bash
patch [options] [originalfile] [patchfile]
#+END_SRC
