#+TITLE: Linux文本处理工具
#+DATE: 2016-06-20
#+SETUPFILE: ~/myblog/setupfile.org
#+JEKYLL_LAYOUT: post
#+JEKYLL_CATEGORIES: Linux
#+JEKYLL_TAGS: Linux 运维 文本处理
#+JEKYLL_PUBLISHED: true

TODO



----- 
* 文本处理工具
** head, tail
#+BEGIN_SRC conf
head [OPTION]... [FILE]...  # 读取文件头
  -c num: 指定获取前num字节
  -n num/-num: 指定获取前num行
  -n -num: 排除后num行
#+END_SRC
#+BEGIN_SRC conf
tail [OPTION]... [FILE]...  # 读取文件尾
  -c num: 指定获取后num字节
  -n num/-num: 指定获取后num行
  -n +num: 排除第num行之前的行数
  -f: 跟踪显示文件新追加的内容；
#+END_SRC

** tr
转换或删除字符
#+BEGIN_SRC conf
tr [OPTION]... SET1 [SET2]
  -d: 删除SET1中的字符(默认为转换为SET2对应的字符)
#+END_SRC

** wc
行数 单词 字节
#+BEGIN_SRC conf
wc [OPTION]... [FILE]...
  -l: lines
  -w: words
  -c: characters
#+END_SRC

** cut
通过分隔符切割后显示指定字段
#+BEGIN_SRC conf
cut [OPTION]... [FILE]...
  -d DELIMITER: 指定分隔符(默认为制表符)
  -f FILEDS: 指定字段，如 1-3,7
  --output-delimiter=STRING: 指定输出分隔符
#+END_SRC

** sort
排序
#+BEGIN_SRC conf
sort [OPTION]... [FILE]...
  -f: 忽略字符大小写
  -r: 逆序
  -t DELIMITER: 字段分隔符
  -k num: 以指定字段为标准排序
  -n: 以数值大小进行排序
  -u: uniq，排序后去重
#+END_SRC

** uniq
去除连续且完全相同的行
#+BEGIN_SRC conf
uniq [OPTION]... [FILE]...
  -c: 显示每行重复出现的次数；
  -d: 仅显示重复过的行；
  -u: 仅显示不曾重复的行；
#+END_SRC

** grep
- grep是一个文本搜索工具，根据用户指定的“模式pattern”对目标文本逐行进行匹配检查，打印匹配到的行
- grep工具有三种: 
  - grep支持基础正则表达式
  - egrep相当于 =grep -E= ，用于扩展正则表达式
  - fgrep不支持正则表达时，但匹配速度快
#+BEGIN_SRC conf
grep [OPTIONS] PATTERN [FILE...]
  -E: 使用扩展正则表达式ERE

  -v: 显示不能够被pattern匹配到的行
  -i: ignore 忽略字符大小写
  -o: only 仅显示匹配到的字符串
  -q: quite 静默模式，不输出任何信息(后边可以检查$?来检查是否匹配到)
  
  -r: 同时搜索目录的子目录

  -A num: after, 匹配的行同时显示其后num行
  -B num: before, 匹配的行同时显示其前num行
  -C num: context, 匹配的行同时显示其前后num行

  --color=auto: 对匹配到的文本着色显示
#+END_SRC
** TODO sed
- 文本编辑工具
** TODO awk
- 文本报告生成器
** TODO xargs

