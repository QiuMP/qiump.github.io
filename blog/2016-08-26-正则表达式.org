#+TITLE: 正则表达式
#+DATE: 2016-06-02
#+SETUPFILE: ~/myblog/setupfile.org
#+JEKYLL_LAYOUT: post
#+JEKYLL_CATEGORIES: 文本处理
#+JEKYLL_TAGS: Linux Bash
#+JEKYLL_PUBLISHED: true


: REGEXP由一类特殊字符及文本字符所编写的模式，其中有些字符不表示字符字面意义，而表示控制或通配的功能
* 正则表达式的类型
  - 基本正则表达式: BRE
  - 扩展正则表达式: ERE (正则表达式引擎: pcre)
* 基本正则表达式
- 字符匹配 ::
  - =.=: 匹配任意单个字符
  - =[]=: 匹配指定范围内的任意单个字符
  - =[^]=: 匹配指定范围外的任意单个字符
  - 专用字符集合: [:digit:]、[:lower:]、[:upper:]、[:alpha:]、[:alnum:]、[:punct:]、[:space:]
- 匹配次数 ::
  - =*=: 匹配前面的字符任意次(默认是贪婪模式)
  - =.*=: 任意长度的任意字符
  - =\?=: 匹配其前面的字符0或1次
  - =\+=: 匹配其前面的字符至少1次
  - =\{m\}=: 匹配前面的字符m次
  - =\{m,n\}=: 匹配前面的字符至少m次，至多n次
	- =\{0,n\}=: 匹配前面的字符至多n次
	- =\{m,\}=: 匹配前面的字符至少m次
- 位置锚定 ::
  - =^=: 行首锚定；用于模式的最左侧
  - =$=: 行尾锚定；用于模式的最右侧
  - =^[[:space:]]$=: 用于模式匹配整个空白行
  - =\<= 或 =\b=: 词首锚定；用于单词模式的左侧
  - =\>= 或 =\b=: 词尾锚定；用于单词模式的右侧
  - =\<PATTERN\>=: 匹配整个单词
- 分组 ::
  - =\(\)=: 将括号内的字符当作一个整体进行处理
  - 分组括号中的模式匹配到的内容会被正则表达式引擎记录于内部变量，可以用于后向引用
  - =\1=: 从左侧起，第一个左括号以及与之匹配右括号之间的模式所匹配到的字符
- 或者 ::
  - =\|=: 匹配左右两种模式中的一个
  - =\(word\|word\)=: 两个单词之一
* 扩展正则表达式
- 扩展正则表达式与正则表达式的区别，只是在除 =\<、\>、\b= 外其他特殊字符不需要添加反斜线\
