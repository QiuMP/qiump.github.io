#+TITLE: Linux日志
#+DATE: 2016-07-14
#+SETUPFILE: ~/myblog/setupfile.org
#+JEKYLL_LAYOUT: post
#+JEKYLL_CATEGORIES: Linux
#+JEKYLL_TAGS: Linux 运维
#+JEKYLL_PUBLISHED: true

简单讲述了Linux的日志，以及rsyslog的相关配置




-----
* 日志
- 日志: 时间+事件
** 系统日志服务
系统日志服务: 提供给其他应用记录日志的功能
- syslog(CentOS5): syslogd(用户日志)、klogd(内核日志)
- rsyslog(CentOS6): syslogd(用户日志)、klogd(内核日志)
  - 基于多线程
  - 支持UDP、TCP、SSL、TLS、RELP远程传输
  - 支持MySQL、PGSQL、Oralce实现日志存储
  - 强大的过滤器，可实现过滤日志信息中任何部分
  - 自定义输出格式
- ELK: Elasticsearch(日志搜索)、Logstash(日志收集)、Kibana(前端日志展示)
** 日志分类
*** facility
facility: 从功能或程序上对日志进行分类
- auth: 认证相关
- authpriv: 认证和授权相关
- cron: cron/at程序日志
- daemon: 守护进程的日志
- kern: 内核日志
- lpr: 打印系统日志
- mail: 邮件系统日志
- news: 新闻组相关
- security: 安全相关
- user: 与用户相关
- uucp: Unix to Unix copy
- local0-local7: 用户自定义
- syslog
*** priority
priority: 日志的重要性级别
- 级别类型: debug, info, notice, warn(warning), err(error), crit(critical), alert, emerg(panic)
- 表示方式
  - *: 所有级别
  - none: 没有级别
  - priority: 此级别及更高级别的日志信息
  - =priority：此级别

* rsyslog
** 程序环境
- 主程序：rsyslogd
- 配置文件：/etc/rsyslog.conf
- 服务脚本：/etc/rc.d/init.d/rsyslog
** 日志的格式
- 文本格式
  #+BEGIN_SRC sh
  事件产生的日期时间 		主机 	进程(pid): 事件内容
  #+END_SRC
- 二进制格式
  - /var/log/wtmp: 当前系统上成功登录的日志
    #+BEGIN_SRC conf
	last
    #+END_SRC
  - /var/log/btmp：当前系统上失败的登录尝试
    #+BEGIN_SRC conf
	lastb
    #+END_SRC
  - lastlog命令: 显示当前系统每一个用户最近一次的登录时间
** 配置文件
*** 读取模块
#+BEGIN_SRC conf
$ModLoad imuxsock
$ModLoad imklog

$ModLoad imudp
$UDPServerRun 514  # 监听端口(默认UDP)
$ModLoad imtcp
$InputTCPServerRun 514  # 监听端口
#+END_SRC
- 模块名以i开头的是输入处理，以o开头的是输出处理
*** RULES
#+BEGIN_SRC conf
facility.priority  target
  target:
    文件路径: 记录于指定的日志文件中，通常应该在/var/log目录下，文件路径前的"-"表示异步写入
    用户: 将日志通知给指定用户
	    *: 所有用户
    日志服务器
      @host: 用UDP连接host(默认514端口)
      @@host: 用TCP连接host(默认514端口)
    管道: |COMMAND


*.info;mail.none;authpriv.none;cron.none  /var/log/messages  # 所有facility但排除mail,authpriv,cron
uucp,news.crit  /var/log/spooler  # 相当于uucp.crit;news.crit
authpriv.*  /var/log/secure
mail.*  -/var/log/maillog  # - 代表异步写入
cron.*  /var/log/cron
*.emerg  *  # 表示通知给所有登录的用户
local7.*  /var/log/boot.log
#+END_SRC
** 连接mysql服务器
1. 准备好MySQL服务器，创建用户，授权对Syslog数据库的全部访问权限
2. 安装rsyslog-mysql程序包
3. 创建rsyslog-mysql依赖的数据库
   #+BEGIN_SRC conf
   mysql -uUSERNAME -hHOST -pPASSWORD < /usr/share/doc/rsyslog-mysql-VERSION/createDB.sql
   #+END_SRC
4. 配置rsyslog使用ommysql模块
   #+BEGIN_SRC conf
   #### MODULES ####
   $ModLoad ommysql

   #### RULES ####
   facility.priority 	:ommysql:DBHOST,DB,DBUSER,USERPASS
   #+END_SRC
5. 重启rsyslog服务
6. 安装loganalyzer
   1. 配置webserver, 支持php
   2. 安装loganalyzer
      #+BEGIN_SRC conf
      cp -r loganalyzer-3.6.5/src /var/www/html/loganalyzer
      cp loganalyzer-3.6.5/contrib/*.sh /var/www/html/loganalyzer
      cd /var/www/html/loganalyzer
      chmod +x *.sh
      ./configure.sh
      ./secure.sh
      chmod 666 config.php
      #+END_SRC
